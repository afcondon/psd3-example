(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by psc-bundle 0.9.2
var PS = {};
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Category = PS["Control.Category"];
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  var apply = function (f) {
      return function (x) {
          return f(x);
      };
  };
  exports["apply"] = apply;
  exports["applyFlipped"] = applyFlipped;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  // module Data.Unit

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  // module Data.Show

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      function (c, i) { // jshint ignore:line
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);  
  var showBoolean = new Show(function (v) {
      if (v) {
          return "true";
      };
      if (!v) {
          return "false";
      };
      throw new Error("Failed pattern match at Data.Show line 13, column 3 - line 14, column 3: " + [ v.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showString"] = showString;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];        
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  // module Control.Monad.Eff

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["log"] = $foreign.log;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // module Data.Eq

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  };                                    
  var eqNumber = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);    
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  // module Data.Bounded

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
    "use strict";

  // module Data.Ord.Unsafe

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Data.Semigroup

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Ord = function (__superclass_Data$dotEq$dotEq_0, compare) {
      this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
      this.compare = compare;
  }; 
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var $27 = compare(dictOrd)(x)(y);
              if ($27 instanceof Data_Ordering.LT) {
                  return y;
              };
              if ($27 instanceof Data_Ordering.EQ) {
                  return x;
              };
              if ($27 instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord line 122, column 3 - line 125, column 12: " + [ $27.constructor.name ]);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["max"] = max;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Ordering = PS["Data.Ordering"];        
  var Bounded = function (__superclass_Data$dotOrd$dotOrd_0, bottom, top) {
      this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                                 
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];        
  var Monoid = function (__superclass_Data$dotSemigroup$dotSemigroup_0, mempty) {
      this["__superclass_Data.Semigroup.Semigroup_0"] = __superclass_Data$dotSemigroup$dotSemigroup_0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");  
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Category = PS["Control.Category"];        
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar29) {
                  return $dollar29;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 283, column 1 - line 283, column 21: " + [ v.constructor.name ]);
          })());
      };
  };
  exports["Just"] = Just;
  exports["Nothing"] = Nothing;
  exports["fromJust"] = fromJust;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false, 
                                  acc: x
                              };
                          };
                          return {
                              init: false, 
                              acc: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.acc)(Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true, 
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["intercalate"] = intercalate;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  exports["unsafePartial"] = $foreign.unsafePartial;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Function = PS["Data.Function"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  exports["cons"] = $foreign.cons;
  exports["reverse"] = $foreign.reverse;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.writeNull = null;
})(PS["Data.Foreign.Null"] = PS["Data.Foreign.Null"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Foreign.Null"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foreign = PS["Data.Foreign"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  exports["writeNull"] = $foreign.writeNull;
})(PS["Data.Foreign.Null"] = PS["Data.Foreign.Null"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["D3.Base"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign_Null = PS["Data.Foreign.Null"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Monoid = PS["Data.Monoid"];        
  var StartDrag = (function () {
      function StartDrag() {

      };
      StartDrag.value = new StartDrag();
      return StartDrag;
  })();
  var Drag = (function () {
      function Drag() {

      };
      Drag.value = new Drag();
      return Drag;
  })();
  var EndDrag = (function () {
      function EndDrag() {

      };
      EndDrag.value = new EndDrag();
      return EndDrag;
  })();
  var StartZoom = (function () {
      function StartZoom() {

      };
      StartZoom.value = new StartZoom();
      return StartZoom;
  })();
  var Zoom = (function () {
      function Zoom() {

      };
      Zoom.value = new Zoom();
      return Zoom;
  })();
  var EndZoom = (function () {
      function EndZoom() {

      };
      EndZoom.value = new EndZoom();
      return EndZoom;
  })();
  var TypeNames = (function () {
      function TypeNames(value0) {
          this.value0 = value0;
      };
      TypeNames.create = function (value0) {
          return new TypeNames(value0);
      };
      return TypeNames;
  })();
  var Data = (function () {
      function Data(value0) {
          this.value0 = value0;
      };
      Data.create = function (value0) {
          return new Data(value0);
      };
      return Data;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return new Keyed(value0, value1);
          };
      };
      return Keyed;
  })();
  var Value = (function () {
      function Value(value0) {
          this.value0 = value0;
      };
      Value.create = function (value0) {
          return new Value(value0);
      };
      return Value;
  })();
  var SetByIndex = (function () {
      function SetByIndex(value0) {
          this.value0 = value0;
      };
      SetByIndex.create = function (value0) {
          return new SetByIndex(value0);
      };
      return SetByIndex;
  })();
  var SetAll = (function () {
      function SetAll(value0) {
          this.value0 = value0;
      };
      SetAll.create = function (value0) {
          return new SetAll(value0);
      };
      return SetAll;
  })();
  var SetSome = (function () {
      function SetSome(value0) {
          this.value0 = value0;
      };
      SetSome.create = function (value0) {
          return new SetSome(value0);
      };
      return SetSome;
  })();
  var SetAttr = (function () {
      function SetAttr(value0) {
          this.value0 = value0;
      };
      SetAttr.create = function (value0) {
          return new SetAttr(value0);
      };
      return SetAttr;
  })();
  var AttrFn = (function () {
      function AttrFn(value0) {
          this.value0 = value0;
      };
      AttrFn.create = function (value0) {
          return new AttrFn(value0);
      };
      return AttrFn;
  })();
  var theHorror = Unsafe_Coerce.unsafeCoerce(Data_Foreign_Null.writeNull);
  var isShowListenerType = new Data_Show.Show(function (v) {
      if (v instanceof StartDrag) {
          return "start";
      };
      if (v instanceof Drag) {
          return "drag";
      };
      if (v instanceof EndDrag) {
          return "end";
      };
      if (v instanceof StartZoom) {
          return "start";
      };
      if (v instanceof Zoom) {
          return "zoom";
      };
      if (v instanceof EndZoom) {
          return "end";
      };
      throw new Error("Failed pattern match at D3.Base line 51, column 3 - line 52, column 3: " + [ v.constructor.name ]);
  });
  var isShowTypenames = new Data_Show.Show(function (v) {
      var f = function (v1) {
          return function (acc) {
              if (v1.name instanceof Data_Maybe.Just) {
                  return Data_Array.cons(Data_Show.show(isShowListenerType)(v1.type) + ("." + v1.name.value0))(acc);
              };
              if (v1.name instanceof Data_Maybe.Nothing) {
                  return Data_Array.cons(Data_Show.show(isShowListenerType)(v1.type))(acc);
              };
              throw new Error("Failed pattern match at D3.Base line 64, column 7 - line 64, column 70: " + [ v1.constructor.name, acc.constructor.name ]);
          };
      };
      return Data_Function.apply(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" "))(Data_Foldable.foldr(Data_Foldable.foldableArray)(f)([  ])(v.value0));
  });
  exports["SetAttr"] = SetAttr;
  exports["AttrFn"] = AttrFn;
  exports["SetAll"] = SetAll;
  exports["SetSome"] = SetSome;
  exports["Data"] = Data;
  exports["Keyed"] = Keyed;
  exports["StartDrag"] = StartDrag;
  exports["Drag"] = Drag;
  exports["EndDrag"] = EndDrag;
  exports["StartZoom"] = StartZoom;
  exports["Zoom"] = Zoom;
  exports["EndZoom"] = EndZoom;
  exports["Value"] = Value;
  exports["SetByIndex"] = SetByIndex;
  exports["TypeNames"] = TypeNames;
  exports["theHorror"] = theHorror;
  exports["isShowListenerType"] = isShowListenerType;
  exports["isShowTypenames"] = isShowTypenames;
})(PS["D3.Base"] = PS["D3.Base"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.d3DragFn    = function() { return d3.drag(); }                                    

  // If listener is specified, sets the event listener for the specified typenames
  // and returns the drag behavior. If an event listener was already registered for
  // the same type and name, the existing listener is removed before the new listener
  // is added.
  exports.addListenerFn     = function(typenames, listener, drag) {
    return drag.on(typenames, listener); }

  // i think it's obvious that relying on these state changes to
  exports.dragUpdateFn      = function(datum, element) {
    d3.select(element)
      .attr("cx", datum.x = d3.event.x)
      .attr("cy", datum.y = d3.event.y)
  }

  // exports.applyDragFn       = function(drag, selection) {
  //   return selection.call(drag)(); }

  exports.mkEffFn4Special   = function mkEffFn4Special(fn) {
    return function(d, i, els) {
      var el = this;
      var datum = d, index = i, elements = els;
      return fn(datum)(index)(elements)(el)();
    };
  };
})(PS["D3.Drag"] = PS["D3.Drag"] || {});
(function(exports) {

  exports.mkEffFn2 = function mkEffFn2(fn) {
    return function(a, b) {
      return fn(a)(b)();
    };
  };

  exports.mkEffFn3 = function mkEffFn3(fn) {
    return function(a, b, c) {
      return fn(a)(b)(c)();
    };
  };

  exports.mkEffFn4 = function mkEffFn4(fn) {
    return function(a, b, c, d) {
      return fn(a)(b)(c)(d)();
    };
  };

  exports.runEffFn1 = function runEffFn1(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };

  exports.runEffFn2 = function runEffFn2(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };

  exports.runEffFn3 = function runEffFn3(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function() {
            return fn(a, b, c);
          };
        };
      };
    };
  };

  exports.runEffFn5 = function runEffFn5(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function(d) {
            return function(e) {
              return function() {
                return fn(a, b, c, d, e);
              };
            };
          };
        };
      };
    };
  };
})(PS["Data.Function.Eff"] = PS["Data.Function.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Function.Eff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["mkEffFn2"] = $foreign.mkEffFn2;
  exports["mkEffFn3"] = $foreign.mkEffFn3;
  exports["mkEffFn4"] = $foreign.mkEffFn4;
  exports["runEffFn1"] = $foreign.runEffFn1;
  exports["runEffFn2"] = $foreign.runEffFn2;
  exports["runEffFn3"] = $foreign.runEffFn3;
  exports["runEffFn5"] = $foreign.runEffFn5;
})(PS["Data.Function.Eff"] = PS["Data.Function.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";          

  exports.nullable = function(a, r, f) {
      return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];                                        
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["D3.Drag"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var D3_Base = PS["D3.Base"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Data_Array = PS["Data.Array"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Show = PS["Data.Show"];
  var dragUpdate = Data_Function_Eff.runEffFn2($foreign.dragUpdateFn);
  var d3Drag = function (d) {
      return $foreign.d3DragFn;
  };
  var addDragListener = function (tn) {
      return function (callback) {
          return Data_Function_Eff.runEffFn3($foreign.addListenerFn)(Data_Show.show(D3_Base.isShowTypenames)(tn))($foreign.mkEffFn4Special(callback));
      };
  };
  exports["addDragListener"] = addDragListener;
  exports["d3Drag"] = d3Drag;
  exports["dragUpdate"] = dragUpdate;
  exports["mkEffFn4Special"] = $foreign.mkEffFn4Special;
})(PS["D3.Drag"] = PS["D3.Drag"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.d3SelectFn    = function (selector)              { return d3.select(selector); }   

  exports.appendFn    = function (tag, selection)          { return selection.append(tag); }
  exports.attrFn      = function (attr, b, selection)      { return selection.attr(attr, b); }
  exports.bindDataFn  = function (array, selection)        { return selection.data(array); }
  exports.bindDataFnK = function (array, keyFn, selection) { return selection.data(array, keyFn); }
  exports.classedFn   = function (names, b, selection)     { return selection.classed(names, b); }
  exports.emptyFn     = function (selection)               { return selection.empty(); }
  exports.enterFn     = function (selection)               { return selection.enter(); }     
  exports.nodeFn      = function (selection)               { return selection.node(); }
  exports.nodesFn     = function (selection)               { return selection.nodes(); } 
  exports.selectAllFn = function (selector, selection)     { return selection.selectAll(selector); }
  exports.selectElFn  = function (element)                 { return d3.select(element); }
  exports.styleFn     = function (key, val, selection)     { return selection.style(key, val); }
  exports.styleFnFn   = function (key, fn, selection)      { return selection.style(key, fn); }
  exports.textFn      = function (text, selection)         { return selection.text(text); }
  exports.textFnFn    = function (fn, selection)           { return selection.text(fn); }
  exports.attrFnP     = function (names, fn, selection)    { return selection.attr(names, fn); }
  exports.classedFnP  = function (names, fn, selection)    { return selection.classed(names, fn); }

  // custom version of mkEffFn1 which passes a row containing data including element and 'this'
  // enables callbacks in the D3 style which rely on 'this' for access to the D3Element associated with the datum
  exports.onFn =
    function (selection, eventType, callback) {
      selection.on(eventType, callback);
      return selection;
    }
  // NB we default 'prop' to duplicate of datum
  exports.mkCallback =
    function (fn) {
      return function(d) {
        return fn(getCallBackParams(d, this, d))();
      };
    };

  // another callback-making function, this time taking a property name and bundling that with datum and event data
  exports.onFnWithProperty =
    function (selection, eventType, callback, propname, prop) {
        selection.on(eventType, callback);
        selection.property(propname, prop);
        return selection;
     }
  exports.mkCallbackWithProp =
    function mkCallbackWithProp(fn) {
      return function(propName) {
        return function(d) {
          return fn(getCallBackParams(d, this, this[propName]))();
        }
      };
    };

  // utility function to package up the parameter block for a callback
  function getCallBackParams(d, elem, prop) {
    var cbParams = { datum:     d
                   , elem:      elem
                   , prop:      prop    // NB - untyped assignment - only use in mkCallback fns
                   , timestamp: d3.event.timeStamp
                   , meta:      d3.event.metaKey
                   , shift:     d3.event.shiftKey
                   , ctrl:      d3.event.ctrlKey
                   , alt:       d3.event.altKey };
    return cbParams;
  }
})(PS["D3.Selection"] = PS["D3.Selection"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["D3.Selection"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var D3_Base = PS["D3.Base"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Functor = PS["Data.Functor"];        
  var text = function (v) {
      if (v instanceof D3_Base.Value) {
          return Data_Function_Eff.runEffFn2($foreign.textFn)(v.value0);
      };
      if (v instanceof D3_Base.SetByIndex) {
          return Data_Function_Eff.runEffFn2($foreign.textFnFn)(Data_Function_Eff.mkEffFn2(v.value0));
      };
      throw new Error("Failed pattern match at D3.Selection line 118, column 1 - line 118, column 54: " + [ v.constructor.name ]);
  };
  var style = function (name) {
      return function (v) {
          if (v instanceof D3_Base.Value) {
              return Data_Function_Eff.runEffFn3($foreign.styleFn)(name)(v.value0);
          };
          if (v instanceof D3_Base.SetByIndex) {
              return Data_Function_Eff.runEffFn3($foreign.styleFnFn)(name)(Data_Function_Eff.mkEffFn2(v.value0));
          };
          throw new Error("Failed pattern match at D3.Selection line 114, column 1 - line 114, column 60: " + [ name.constructor.name, v.constructor.name ]);
      };
  };                                                      
  var selectElem = function (element) {
      return Data_Function_Eff.runEffFn1($foreign.selectElFn)(element);
  };
  var selectAll = function (selector) {
      return Data_Function_Eff.runEffFn2($foreign.selectAllFn)(selector);
  };                                                        
  var on$prime = function (evType) {
      return function (propName) {
          return function (prop) {
              return function (callback) {
                  return function (sel) {
                      return Data_Function_Eff.runEffFn5($foreign.onFnWithProperty)(sel)(evType)($foreign.mkCallbackWithProp(callback)(propName))(propName)(prop);
                  };
              };
          };
      };
  };
  var on = function (event) {
      return function (callback) {
          return function (selection) {
              return Data_Function_Eff.runEffFn3($foreign.onFn)(selection)(event)($foreign.mkCallback(callback));
          };
      };
  };
  var nodes = Data_Function_Eff.runEffFn1($foreign.nodesFn);
  var node = function (s) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Data_Function_Eff.runEffFn1($foreign.nodeFn)(s));
  };                                                      
  var enter = Data_Function_Eff.runEffFn1($foreign.enterFn);
  var empty = Data_Function_Eff.runEffFn1($foreign.emptyFn);
  var dataBind = function (v) {
      if (v instanceof D3_Base.Data) {
          return Data_Function_Eff.runEffFn2($foreign.bindDataFn)(v.value0);
      };
      if (v instanceof D3_Base.Keyed) {
          return Data_Function_Eff.runEffFn3($foreign.bindDataFnK)(v.value0)(v.value1);
      };
      throw new Error("Failed pattern match at D3.Selection line 139, column 1 - line 139, column 67: " + [ v.constructor.name ]);
  };
  var d3Select = function (selector) {
      return Data_Function_Eff.runEffFn1($foreign.d3SelectFn)(selector);
  };
  var classed = function (s) {
      return function (v) {
          if (v instanceof D3_Base.SetAll) {
              return Data_Function_Eff.runEffFn3($foreign.classedFn)(s)(v.value0);
          };
          if (v instanceof D3_Base.SetSome) {
              return Data_Function_Eff.runEffFn3($foreign.classedFnP)(s)(Data_Function_Eff.mkEffFn4(v.value0));
          };
          throw new Error("Failed pattern match at D3.Selection line 106, column 1 - line 106, column 56: " + [ s.constructor.name, v.constructor.name ]);
      };
  };
  var call2 = function (fn) {
      return function (a) {
          return function (b) {
              return function (s) {
                  return fn(s)(a)(b);
              };
          };
      };
  };
  var call = function (fn) {
      return function (s) {
          return fn(s);
      };
  };
  var attr = function (s) {
      return function (v) {
          if (v instanceof D3_Base.SetAttr) {
              return Data_Function_Eff.runEffFn3($foreign.attrFn)(s)(v.value0);
          };
          if (v instanceof D3_Base.AttrFn) {
              return Data_Function_Eff.runEffFn3($foreign.attrFnP)(s)(Data_Function_Eff.mkEffFn4(v.value0));
          };
          throw new Error("Failed pattern match at D3.Selection line 110, column 1 - line 110, column 53: " + [ s.constructor.name, v.constructor.name ]);
      };
  };
  var append = function (tag) {
      return Data_Function_Eff.runEffFn2($foreign.appendFn)(tag);
  };
  exports["append"] = append;
  exports["attr"] = attr;
  exports["call"] = call;
  exports["call2"] = call2;
  exports["classed"] = classed;
  exports["d3Select"] = d3Select;
  exports["dataBind"] = dataBind;
  exports["empty"] = empty;
  exports["enter"] = enter;
  exports["node"] = node;
  exports["nodes"] = nodes;
  exports["on"] = on;
  exports["on'"] = on$prime;
  exports["selectAll"] = selectAll;
  exports["selectElem"] = selectElem;
  exports["style"] = style;
  exports["text"] = text;
})(PS["D3.Selection"] = PS["D3.Selection"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.d3TransitionFn    = function (name)                     { return d3.transition(name); }
  exports.d3TransitionFn2   = function ()                         { return d3.transition(); }              
  exports.durationFn        = function (ms, transition)           { return transition.duration(ms); }
  exports.namedTransitionFn = function (name, selection)          { return selection.transition(name); }
  exports.savedTransitionFn = function (t, selection)             { return selection.transition(t); }
  exports.styleFn           = function (name, value, transition)  { return transition.style(name, value); }
  exports.styleIFn          = function (name, interp, transition) { return transition.style(name, interp); }
  exports.styleTweenFn      = function (name, interp, transition) { return transition.styleTween(name, interp); }
  exports.transition2Fn     = function (transition)               { return transition.transition(); }
  exports.delayFn           = function (ms, transition)           { return transition.delay(ms); }
  exports.delayIFn          = function (fn, transition)           { return transition.delay(fn); }
})(PS["D3.Transitions"] = PS["D3.Transitions"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["D3.Transitions"];
  var D3_Base = PS["D3.Base"];
  var D3_Interpolator = PS["D3.Interpolator"];
  var D3_Selection = PS["D3.Selection"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var Name = (function () {
      function Name(value0) {
          this.value0 = value0;
      };
      Name.create = function (value0) {
          return new Name(value0);
      };
      return Name;
  })();
  var Unnamed = (function () {
      function Unnamed() {

      };
      Unnamed.value = new Unnamed();
      return Unnamed;
  })();
  var MilliSec = (function () {
      function MilliSec(value0) {
          this.value0 = value0;
      };
      MilliSec.create = function (value0) {
          return new MilliSec(value0);
      };
      return MilliSec;
  })();
  var DelayFn = (function () {
      function DelayFn(value0) {
          this.value0 = value0;
      };
      DelayFn.create = function (value0) {
          return new DelayFn(value0);
      };
      return DelayFn;
  })();
  var Target = (function () {
      function Target(value0) {
          this.value0 = value0;
      };
      Target.create = function (value0) {
          return new Target(value0);
      };
      return Target;
  })();
  var TweenTarget = (function () {
      function TweenTarget(value0) {
          this.value0 = value0;
      };
      TweenTarget.create = function (value0) {
          return new TweenTarget(value0);
      };
      return TweenTarget;
  })();
  var TweenFn = (function () {
      function TweenFn(value0) {
          this.value0 = value0;
      };
      TweenFn.create = function (value0) {
          return new TweenFn(value0);
      };
      return TweenFn;
  })();
  var tStyle = function (name) {
      return function (v) {
          if (v instanceof Target) {
              return Data_Function_Eff.runEffFn3($foreign.styleFn)(name)(v.value0);
          };
          if (v instanceof TweenTarget) {
              return Data_Function_Eff.runEffFn3($foreign.styleIFn)(name)(Data_Function_Eff.mkEffFn3(v.value0));
          };
          if (v instanceof TweenFn) {
              return Data_Function_Eff.runEffFn3($foreign.styleTweenFn)(name)(Data_Function_Eff.mkEffFn3(v.value0));
          };
          throw new Error("Failed pattern match at D3.Transitions line 164, column 1 - line 164, column 60: " + [ name.constructor.name, v.constructor.name ]);
      };
  };
  var savedTransition = function (name) {
      return Data_Function_Eff.runEffFn2($foreign.savedTransitionFn)(name);
  };
  var namedTransition = function (name) {
      return Data_Function_Eff.runEffFn2($foreign.namedTransitionFn)(name);
  };                                                                    
  var duration = function (t) {
      return Data_Function_Eff.runEffFn2($foreign.durationFn)(t);
  };
  var delay = function (v) {
      if (v instanceof MilliSec) {
          return Data_Function_Eff.runEffFn2($foreign.delayFn)(v.value0);
      };
      if (v instanceof DelayFn) {
          return Data_Function_Eff.runEffFn2($foreign.delayIFn)(Data_Function_Eff.mkEffFn2(v.value0));
      };
      throw new Error("Failed pattern match at D3.Transitions line 122, column 1 - line 122, column 50: " + [ v.constructor.name ]);
  };
  var d3Transition = function (v) {
      if (v instanceof Name) {
          return Data_Function_Eff.runEffFn1($foreign.d3TransitionFn)(v.value0);
      };
      if (v instanceof Unnamed) {
          return $foreign.d3TransitionFn2;
      };
      throw new Error("Failed pattern match at D3.Transitions line 100, column 1 - line 100, column 60: " + [ v.constructor.name ]);
  };
  var addTransition = Data_Function_Eff.runEffFn1($foreign.transition2Fn);
  exports["Target"] = Target;
  exports["TweenTarget"] = TweenTarget;
  exports["TweenFn"] = TweenFn;
  exports["MilliSec"] = MilliSec;
  exports["DelayFn"] = DelayFn;
  exports["Name"] = Name;
  exports["Unnamed"] = Unnamed;
  exports["addTransition"] = addTransition;
  exports["d3Transition"] = d3Transition;
  exports["delay"] = delay;
  exports["duration"] = duration;
  exports["namedTransition"] = namedTransition;
  exports["savedTransition"] = savedTransition;
  exports["tStyle"] = tStyle;
})(PS["D3.Transitions"] = PS["D3.Transitions"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.d3ZoomFn       = function() { return d3.zoom(); }
  exports.scaleExtentFn  = function(extent, zoom) { return zoom.scaleExtent(extent); } // obvs only valid if called when zoom TODO
  exports.getTransformFn = function() {
    return d3.event.transform; } // could be some Maybe stuff here

  // this is the exact same implementation as that in Drag.js so it should be
  // coalesced and put in Base.purs TODO
  exports.addListenerFn     = function(typenames, listener, zoom) {
    return zoom.on(typenames, listener); }
})(PS["D3.Zoom"] = PS["D3.Zoom"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["D3.Zoom"];
  var D3_Base = PS["D3.Base"];
  var D3_Drag = PS["D3.Drag"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Prelude = PS["Prelude"];
  var Data_Show = PS["Data.Show"];        
  var scaleExtent = Data_Function_Eff.runEffFn2($foreign.scaleExtentFn);
  var getZoomTransform = $foreign.getTransformFn;
  var d3Zoom = $foreign.d3ZoomFn;
  var addZoomListener = function (tn) {
      return function (callback) {
          return Data_Function_Eff.runEffFn3($foreign.addListenerFn)(Data_Show.show(D3_Base.isShowTypenames)(tn))(D3_Drag.mkEffFn4Special(callback));
      };
  };
  exports["addZoomListener"] = addZoomListener;
  exports["d3Zoom"] = d3Zoom;
  exports["getZoomTransform"] = getZoomTransform;
  exports["scaleExtent"] = scaleExtent;
})(PS["D3.Zoom"] = PS["D3.Zoom"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var mouseleave = "mouseleave";
  var mouseenter = "mouseenter";
  var click = "click";
  exports["click"] = click;
  exports["mouseenter"] = mouseenter;
  exports["mouseleave"] = mouseleave;
})(PS["DOM.HTML.Event.EventTypes"] = PS["DOM.HTML.Event.EventTypes"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
    "use strict";        

  exports.floor = Math.floor;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Math"];
  exports["floor"] = $foreign.floor;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Int"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Data_Maybe.fromJust(dictPartial)(fromNumber(x));
          });
      };
      throw new Error("Failed pattern match at Data.Int line 65, column 1 - line 68, column 56: " + [ x.constructor.name ]);
  };
  var floor = function ($4) {
      return unsafeClamp($$Math.floor($4));
  };
  exports["floor"] = floor;
  exports["fromNumber"] = fromNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["length"] = $foreign.length;
  exports["toCharArray"] = $foreign.toCharArray;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var D3_Selection = PS["D3.Selection"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var D3_Base = PS["D3.Base"];
  var D3_Drag = PS["D3.Drag"];
  var D3_Zoom = PS["D3.Zoom"];
  var D3_Interpolator = PS["D3.Interpolator"];
  var D3_Transitions = PS["D3.Transitions"];
  var DOM_HTML_Event_EventTypes = PS["DOM.HTML.Event.EventTypes"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Data_Show = PS["Data.Show"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];        
  var zoomed = function (d) {
      return function (i) {
          return function (els) {
              return function (element) {
                  return function __do() {
                      var v = Control_Bind.bind(Control_Monad_Eff.bindEff)(D3_Selection.d3Select("g"))(D3_Selection.attr("transform")(new D3_Base.SetAttr(D3_Zoom.getZoomTransform)))();
                      return Data_Unit.unit;
                  };
              };
          };
      };
  };
  var vis = function (s) {
      return function (first) {
          return function (last) {
              return function __do() {
                  Control_Bind.bind(Control_Monad_Eff.bindEff)(Data_Function.applyFlipped(s)(D3_Selection.attr("first-name")(new D3_Base.SetAttr(first))))(D3_Selection.attr("last-name")(new D3_Base.SetAttr(last)))();
                  return s;
              };
          };
      };
  };
  var ure = function (d) {
      return function (v) {
          return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Data_Show.show(Data_Show.showString)(d));
      };
  };
  var tej = function (d) {
      return function (i) {
          var l = (Data_String.length(d) * 30 | 0) * Data_Int.floor(i + 1.0) | 0;
          return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Data_Show.show(Data_Show.showInt)(l) + "px");
      };
  };
  var suq = function (dictShow) {
      return function (d) {
          return function (v) {
              return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Data_Show.show(dictShow)(d));
          };
      };
  };
  var roc = function (d) {
      return function (i) {
          return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Data_Show.show(Data_Show.showString)(d) + (" " + Data_Show.show(Data_Show.showNumber)(i)));
      };
  };
  var revString = function ($53) {
      return Data_String.fromCharArray(Data_Array.reverse(Data_String.toCharArray($53)));
  };
  var jud = function (t) {
      var tval = Data_Show.show(Data_Show.showNumber)(t * 360.0);
      return "hsl(" + (tval + ",100%,50%)");
  };
  var kef = function (d) {
      return function (i) {
          return function (e) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(jud);
          };
      };
  };
  var ist = function (d) {
      return function (v) {
          return function (v1) {
              var val = d * 10.0;
              return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Data_Show.show(Data_Show.showNumber)(val) + "px");
          };
      };
  };
  var hoy = D3_Transitions.d3Transition(new D3_Transitions.Name("hoy"));
  var dragged = function (d) {
      return function (i) {
          return function (els) {
              return function (element) {
                  return function __do() {
                      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(D3_Selection.selectElem(element))(D3_Selection.attr("cx")(new D3_Base.SetAttr(d.x))))(D3_Selection.attr("cy")(new D3_Base.SetAttr(d.y)))();
                      D3_Drag.dragUpdate(d)(element)();
                      return Data_Unit.unit;
                  };
              };
          };
      };
  };
  var dof = function (datum) {
      return function (v) {
          return function (v1) {
              return function (v2) {
                  return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))((function () {
                      var $30 = datum === "erg";
                      if ($30) {
                          return "ergo propter hoc";
                      };
                      if (!$30) {
                          return D3_Base.theHorror;
                      };
                      throw new Error("Failed pattern match at Main line 72, column 19 - line 72, column 84: " + [ $30.constructor.name ]);
                  })());
              };
          };
      };
  };
  var circleData = [ {
      x: 100.0, 
      y: 100.0
  }, {
      x: 200.0, 
      y: 200.0
  }, {
      x: 100.0, 
      y: 200.0
  }, {
      x: 200.0, 
      y: 100.0
  }, {
      x: 150.0, 
      y: 150.0
  } ];
  var cep = function (datum) {
      return function (v) {
          return function (v1) {
              return function (v2) {
                  return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))((function () {
                      var $31 = datum === 16.0;
                      if ($31) {
                          return true;
                      };
                      if (!$31) {
                          return false;
                      };
                      throw new Error("Failed pattern match at Main line 69, column 19 - line 69, column 65: " + [ $31.constructor.name ]);
                  })());
              };
          };
      };
  };
  var bel = function (v) {
      return function __do() {
          Control_Monad_Eff_Console.log(Data_Show.show(Data_Show.showNumber)(v.datum))();
          Control_Monad_Eff_Console.log(Data_Show.show(Data_Show.showString)(v.prop))();
          return Data_Unit.unit;
      };
  };
  var awn = function (v) {
      return function __do() {
          Control_Monad_Eff_Console.log(Data_Show.show(Data_Show.showNumber)(v.datum))();
          Control_Monad_Eff_Console.log(Data_Show.show(Data_Show.showBoolean)(v.meta))();
          return Data_Unit.unit;
      };
  };
  var array2 = [ "awn", "bel", "cep", "dof", "erg", "fub" ];
  var array = [ 4.0, 8.0, 15.0, 16.0, 23.0, 42.0 ];
  var arrayMax = Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Ord.max(Data_Ord.ordNumber))(0.0)(array);
  var main = function __do() {
      var v = Control_Bind.bind(Control_Monad_Eff.bindEff)(D3_Transitions.d3Transition(new D3_Transitions.Name("erg")))(D3_Transitions.duration(2000.0))();
      var v1 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(D3_Selection.d3Select(".chart"))(D3_Selection.selectAll("div")))(D3_Selection.dataBind(new D3_Base.Data(array))))(D3_Selection.enter))(D3_Selection.append("div")))(D3_Selection.style("width")(new D3_Base.Value("30px"))))(D3_Selection.style("font-size")(new D3_Base.Value("48pt"))))(D3_Selection.classed("twice as nice")(new D3_Base.SetSome(function (d) {
          return function (i) {
              return function (nodes) {
                  return function (el) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(i === 2.0);
                  };
              };
          };
      }))))(D3_Selection.classed("16 candles")(new D3_Base.SetSome(cep))))(D3_Selection.attr("name")(new D3_Base.SetAttr("zek"))))(D3_Selection.text(new D3_Base.SetByIndex(suq(Data_Show.showNumber)))))(D3_Selection.on(DOM_HTML_Event_EventTypes.mouseenter)(awn)))(D3_Selection.on(DOM_HTML_Event_EventTypes.mouseleave)(awn)))(D3_Selection["on'"](DOM_HTML_Event_EventTypes.click)("prop")("propval")(bel)))(D3_Selection.call2(vis)("mickey")("mouse"))();
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Data_Function.applyFlipped(v1)(D3_Transitions.savedTransition(v)))(D3_Transitions.tStyle("color")(new D3_Transitions.Target("black"))))(D3_Transitions.tStyle("font-size")(new D3_Transitions.Target("24pt"))))(D3_Transitions.tStyle("width")(new D3_Transitions.TweenTarget(ist))))(D3_Transitions.addTransition))(D3_Transitions.delay(new D3_Transitions.MilliSec(500.0))))(D3_Transitions.tStyle("background-color")(new D3_Transitions.TweenFn(kef)))();
      var v2 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(D3_Selection.d3Select(".chart2"))(D3_Selection.selectAll("div")))(D3_Selection.dataBind(new D3_Base.Keyed(array2, function (d) {
          return revString(d);
      }))))(D3_Selection.enter))(D3_Selection.append("div")))(D3_Selection.style("background-color")(new D3_Base.Value("red"))))(D3_Selection.style("width")(new D3_Base.SetByIndex(tej))))(D3_Selection.classed("wis xis")(new D3_Base.SetAll(true))))(D3_Selection.attr("name")(new D3_Base.AttrFn(dof))))(D3_Selection.text(new D3_Base.SetByIndex(ure))))(D3_Selection.text(new D3_Base.SetByIndex(roc))))(D3_Selection["on'"](DOM_HTML_Event_EventTypes.click)("cep")("stringy")(bel))();
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Data_Function.applyFlipped(v2)(D3_Transitions.namedTransition("erg")))(D3_Transitions.tStyle("background-color")(new D3_Transitions.Target("blue"))))(D3_Transitions.tStyle("color")(new D3_Transitions.Target("white")))();
      var v3 = D3_Selection.d3Select("notfound")();
      var v4 = Data_Function.applyFlipped(v2)(D3_Selection.node)();
      var v5 = Data_Function.applyFlipped(v2)(D3_Selection.nodes)();
      var v6 = Data_Function.applyFlipped(v2)(D3_Selection.empty)();
      var v7 = Data_Function.applyFlipped(v3)(D3_Selection.node)();
      var v8 = Data_Function.applyFlipped(v3)(D3_Selection.nodes)();
      var v9 = Data_Function.applyFlipped(v3)(D3_Selection.empty)();
      var v10 = D3_Selection.d3Select(".svg")();
      var v11 = Data_Function.applyFlipped(v10)(D3_Selection.append("g"))();
      var v12 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Data_Function.applyFlipped(v11)(D3_Selection.selectAll("circle")))(D3_Selection.dataBind(new D3_Base.Data(circleData))))(D3_Selection.enter))(D3_Selection.append("circle")))(D3_Selection.attr("cx")(new D3_Base.AttrFn(function (d) {
          return function (i) {
              return function (nodes) {
                  return function (el) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(d.x);
                  };
              };
          };
      }))))(D3_Selection.attr("cy")(new D3_Base.AttrFn(function (d) {
          return function (i) {
              return function (nodes) {
                  return function (el) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(d.y);
                  };
              };
          };
      }))))(D3_Selection.attr("r")(new D3_Base.SetAttr(20.0))))(D3_Selection.style("stroke")(new D3_Base.Value("red"))))(D3_Selection.style("fill")(new D3_Base.Value("black")))();
      var phantom = {
          x: 0.0, 
          y: 0.0
      };
      var tn = new D3_Base.TypeNames([ {
          name: new Data_Maybe.Just("foo"), 
          type: D3_Base.Drag.value
      } ]);
      var v13 = Control_Bind.bind(Control_Monad_Eff.bindEff)(D3_Drag.d3Drag(phantom))(D3_Drag.addDragListener(tn)(dragged))();
      var foo = Data_Function.applyFlipped(v12)(D3_Selection.call(Unsafe_Coerce.unsafeCoerce(v13)));
      var tn2 = new D3_Base.TypeNames([ {
          name: new Data_Maybe.Just("foo"), 
          type: D3_Base.Zoom.value
      } ]);
      var v14 = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(D3_Zoom.d3Zoom)(D3_Zoom.scaleExtent([ 0.5, 8.0 ])))(D3_Zoom.addZoomListener(tn2)(zoomed))();
      var bar = Data_Function.applyFlipped(v10)(D3_Selection.call(Unsafe_Coerce.unsafeCoerce(v14)));
      return Data_Unit.unit;
  };
  exports["array"] = array;
  exports["array2"] = array2;
  exports["arrayMax"] = arrayMax;
  exports["awn"] = awn;
  exports["bel"] = bel;
  exports["cep"] = cep;
  exports["circleData"] = circleData;
  exports["dof"] = dof;
  exports["dragged"] = dragged;
  exports["hoy"] = hoy;
  exports["ist"] = ist;
  exports["jud"] = jud;
  exports["kef"] = kef;
  exports["main"] = main;
  exports["revString"] = revString;
  exports["roc"] = roc;
  exports["suq"] = suq;
  exports["tej"] = tej;
  exports["ure"] = ure;
  exports["vis"] = vis;
  exports["zoomed"] = zoomed;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();

},{}]},{},[1]);
