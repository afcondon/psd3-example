// Generated by psc-bundle 0.9.2
var PS = {};
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];        
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  // module Control.Monad.Eff

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {

  exports.runEffFn1 = function runEffFn1(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };

  exports.runEffFn2 = function runEffFn2(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };

  exports.runEffFn3 = function runEffFn3(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function() {
            return fn(a, b, c);
          };
        };
      };
    };
  };
})(PS["Data.Function.Eff"] = PS["Data.Function.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Function.Eff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["runEffFn1"] = $foreign.runEffFn1;
  exports["runEffFn2"] = $foreign.runEffFn2;
  exports["runEffFn3"] = $foreign.runEffFn3;
})(PS["Data.Function.Eff"] = PS["Data.Function.Eff"] || {});
(function(exports) {
    "use strict";

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showNumber = new Show($foreign.showNumberImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showNumber"] = showNumber;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Graphics.D3.Selection

  exports.unsafeInsertImpl  = unsafeInsert
  exports.unsafeAppendImpl  = unsafeAppend
  exports.selectImpl        = select
  exports.filterImpl        = filter
  exports.filterPImpl       = filter       
  exports.selectAllImpl     = selectAll
  exports.rootSelectImpl    = rootSelect   
  exports.unsafeRemoveImpl  = unsafeRemove
  exports.bindDataImpl      = bindData         
  exports.orderImpl         = order
  exports.enterImpl         = enter
  exports.transitionImpl    = transition
  exports.transitionImplP   = transitionP
  exports.unsafeSizeImpl    = unsafeSize
  exports.unsafeAttrImpl    = unsafeAttr  
  exports.unsafeClassedImpl = unsafeClassed
  exports.unsafeStyleImpl   = unsafeStyle
  exports.unsafeStyleImplP  = unsafeStyleP
  exports.unsafeStyleImplPP = unsafeStylePP
  exports.unsafeTextImpl    = unsafeText
  exports.unsafeTextImplP   = unsafeTextP
  exports.unsafeTextImplPP  = unsafeTextPP
  function logMessage(level, message, callback) {
    console.log(level + ": " + message);
    if (level === "HAIR ON FIRE") {
      callback("zomg")
    } else {
      callback(null);
    }
  }
  // end
  // functions for typeclass "Appendable"
  function unsafeInsert(selector, selection) {
    return selection.insert(selector);
  }
  function unsafeAppend(tag, selection) {
    return selection.append(tag);
  }

  function unsafeRemove(selection) {
    return selection.remove();
  }
  function rootSelect(selector) {
    return d3.select(selector);
  }
  function rootSelectAll(selector) {
    return d3.selectAll(selector);
  }
  function selectAll(selector, selection) {
    return selection.selectAll(selector);
  }
  function select(selector, selection) {
    return selection.select(selector);
  }
  function filter(selector, selection) {
    return selection.filter(selector);
  }
  function selectElement(element) {
    return d3.select(element);
  }
  function bindData(array, selection) {
    return selection.data(array);
  }
  function bindDataWithKeyFn(array, keyFn, selection) {
    return selection.data(array, keyFn);
  }
  function order(selection) {
    return selection.order();
  }
  function enter(update) {
    return update.enter();
  }
  function exit(update) {
    return update.exit();
  }
  function transition(selection) {
    return selection.transition();
  }
  function transitionP(name, selection) {
    return selection.transition(name);
  }
  function unsafeAttr(key, val, selection) {  // val is simple value
    return selection.attr(key, val);
  }
  function unsafeAttrP(key, val, selection) {  // val is (d -> v)
    return selection.attr(key, val);
  }
  function unsafeAttrPP(key, val, selection) { // val is (d -> Number -> v)
    return selection.attr(key, function(d,i) { return val(d)(i); })
  }
  function unsafeClassed(classname, val, selection) {
    return selection.classed(classname, val);
  }
  function unsafeStyle(key, val, selection) {
    return selection.style(key, val);
  }
  function unsafeStyleP(key, val, selection) {
    return selection.style(key, val);
  }
  function unsafeStylePP(key, val, selection) {
    return selection.style(key, function (d, i) { return val(d)(i); })
  }
  function unsafeText(text, selection) {
    return selection.text(text);
  }
  function unsafeTextP(text, selection) {
    return selection.text(text);
  }
  function unsafeTextPP(text, selection) {
    return selection.text(function (d,i) { return text(d)(i); });
  }
  function delay(delay, transition) {
    return transition.delay(delay);
  }
  function delayP(delay, transition) {
    return transition.delay(delay);
  }
  function delayPP(delay, transition) {
    return transition.delay(function (d,i) { return delay(d)(i); });
  }
  function duration(duration, transition) {
    return transition.duration(duration);
  }
  function durationP(duration, transition) {
    return transition.duration(duration);
  }
  function durationPP(duration, transition) {
    return transition.duration(function (d, i) { return duration(d)(i); });
  }
  function unsafeSize(selection) {
    return selection.size();
  }
  // functions that attach event handlers
  function attachCallbackToEvent(selection, eventType, callback) {
    selection.on(eventType, callback);
    return selection;
  }

  // another variation useful if you need to pass something arbitrary thru to the callback fn
  // achieved by caching the thing you want sent in a Property in the D3 selection
  function attachCallbackToEventWithProperty(selection, eventType, callback, propname, prop) {
    selection.on(eventType, callback);
    selection.property(propname, prop);
    return selection;
  }
})(PS["Graphics.D3.Selection"] = PS["Graphics.D3.Selection"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Graphics.D3.Selection"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Graphics_D3_Base = PS["Graphics.D3.Base"];
  var Graphics_D3_EffFnExtra = PS["Graphics.D3.EffFnExtra"];        
  var AttrValue = {};
  var Appendable = function (append, insert) {
      this.append = append;
      this.insert = insert;
  };
  var Existing = function (attr, attr$prime, attr$prime$prime, classed, filter, filter$prime, order, remove, select, selectAll, size$prime, style, style$prime, style$prime$prime, text, text$prime, text$prime$prime, transition, transition$prime) {
      this.attr = attr;
      this["attr'"] = attr$prime;
      this["attr''"] = attr$prime$prime;
      this.classed = classed;
      this.filter = filter;
      this["filter'"] = filter$prime;
      this.order = order;
      this.remove = remove;
      this.select = select;
      this.selectAll = selectAll;
      this["size'"] = size$prime;
      this.style = style;
      this["style'"] = style$prime;
      this["style''"] = style$prime$prime;
      this.text = text;
      this["text'"] = text$prime;
      this["text''"] = text$prime$prime;
      this.transition = transition;
      this["transition'"] = transition$prime;
  };
  var unsafeTransitionN = Data_Function_Eff.runEffFn2($foreign.transitionImplP);
  var unsafeTransition = Data_Function_Eff.runEffFn1($foreign.transitionImpl);
  var unsafeText$prime$prime = Data_Function_Eff.runEffFn2($foreign.unsafeTextImplPP);
  var unsafeText$prime = Data_Function_Eff.runEffFn2($foreign.unsafeTextImplP);
  var unsafeText = Data_Function_Eff.runEffFn2($foreign.unsafeTextImpl);
  var unsafeStyle$prime$prime = Data_Function_Eff.runEffFn3($foreign.unsafeStyleImplPP);
  var unsafeStyle$prime = Data_Function_Eff.runEffFn3($foreign.unsafeStyleImplP);
  var unsafeStyle = function (dictAttrValue) {
      return Data_Function_Eff.runEffFn3($foreign.unsafeStyleImpl);
  };
  var unsafeSize = Data_Function_Eff.runEffFn1($foreign.unsafeSizeImpl);
  var unsafeSelectAll = Data_Function_Eff.runEffFn2($foreign.selectAllImpl);
  var unsafeSelect = Data_Function_Eff.runEffFn2($foreign.selectImpl);
  var unsafeRemove = Data_Function_Eff.runEffFn1($foreign.unsafeRemoveImpl);
  var unsafeOrder = Data_Function_Eff.runEffFn1($foreign.orderImpl);
  var unsafeInsert = Data_Function_Eff.runEffFn2($foreign.unsafeInsertImpl);
  var unsafeFilter$prime = Data_Function_Eff.runEffFn2($foreign.filterPImpl);
  var unsafeFilter = Data_Function_Eff.runEffFn2($foreign.filterImpl);
  var unsafeClassed = Data_Function_Eff.runEffFn3($foreign.unsafeClassedImpl);
  var unsafeAttr$prime$prime = function (dictAttrValue) {
      return Data_Function_Eff.runEffFn3($foreign.unsafeAttrImpl);
  };
  var unsafeAttr$prime = function (dictAttrValue) {
      return Data_Function_Eff.runEffFn3($foreign.unsafeAttrImpl);
  };
  var unsafeAttr = function (dictAttrValue) {
      return Data_Function_Eff.runEffFn3($foreign.unsafeAttrImpl);
  };
  var unsafeAppend = Data_Function_Eff.runEffFn2($foreign.unsafeAppendImpl);
  var transition$prime = function (dict) {
      return dict["transition'"];
  };
  var transition = function (dict) {
      return dict.transition;
  };
  var text$prime$prime = function (dict) {
      return dict["text''"];
  };
  var text$prime = function (dict) {
      return dict["text'"];
  };
  var text = function (dict) {
      return dict.text;
  };
  var style$prime$prime = function (dict) {
      return dict["style''"];
  };
  var style$prime = function (dict) {
      return dict["style'"];
  };
  var style = function (dict) {
      return dict.style;
  };
  var size$prime = function (dict) {
      return dict["size'"];
  };
  var selectAll = function (dict) {
      return dict.selectAll;
  };                                                                         
  var select = function (dict) {
      return dict.select;
  };                                                                          
  var rootSelect = Data_Function_Eff.runEffFn1($foreign.rootSelectImpl);
  var remove = function (dict) {
      return dict.remove;
  };
  var order = function (dict) {
      return dict.order;
  };
  var insert = function (dict) {
      return dict.insert;
  };
  var filter$prime = function (dict) {
      return dict["filter'"];
  };
  var filter = function (dict) {
      return dict.filter;
  };                                                        
  var enter = Data_Function_Eff.runEffFn1($foreign.enterImpl);
  var classed = function (dict) {
      return dict.classed;
  };                                                                   
  var bindData = Data_Function_Eff.runEffFn2($foreign.bindDataImpl);
  var attrValNumber = AttrValue;
  var existingSelection = new Existing(function (dictAttrValue) {
      return unsafeAttr(dictAttrValue);
  }, function (dictAttrValue) {
      return unsafeAttr$prime(dictAttrValue);
  }, function (dictAttrValue) {
      return unsafeAttr$prime$prime(attrValNumber);
  }, unsafeClassed, unsafeFilter, unsafeFilter$prime, unsafeOrder, unsafeRemove, unsafeSelect, unsafeSelectAll, unsafeSize, function (dictAttrValue) {
      return unsafeStyle(dictAttrValue);
  }, unsafeStyle$prime, unsafeStyle$prime$prime, unsafeText, unsafeText$prime, unsafeText$prime$prime, unsafeTransition, unsafeTransitionN);
  var attr$prime$prime = function (dict) {
      return dict["attr''"];
  };
  var attr$prime = function (dict) {
      return dict["attr'"];
  };
  var attr = function (dict) {
      return dict.attr;
  };                                                                   
  var appendableEnter = new Appendable(unsafeAppend, unsafeInsert);
  var append = function (dict) {
      return dict.append;
  };
  exports["Appendable"] = Appendable;
  exports["AttrValue"] = AttrValue;
  exports["Existing"] = Existing;
  exports["append"] = append;
  exports["attr"] = attr;
  exports["bindData"] = bindData;
  exports["classed"] = classed;
  exports["enter"] = enter;
  exports["filter"] = filter;
  exports["insert"] = insert;
  exports["order"] = order;
  exports["remove"] = remove;
  exports["rootSelect"] = rootSelect;
  exports["select"] = select;
  exports["selectAll"] = selectAll;
  exports["style"] = style;
  exports["style'"] = style$prime;
  exports["text"] = text;
  exports["text'"] = text$prime;
  exports["transition"] = transition;
  exports["attrValNumber"] = attrValNumber;
  exports["appendableEnter"] = appendableEnter;
  exports["existingSelection"] = existingSelection;
})(PS["Graphics.D3.Selection"] = PS["Graphics.D3.Selection"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  var Graphics_D3_Base = PS["Graphics.D3.Base"];
  var Graphics_D3_Util = PS["Graphics.D3.Util"];
  var Graphics_D3_Selection = PS["Graphics.D3.Selection"];
  var Graphics_D3_Scale = PS["Graphics.D3.Scale"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var array = [ 4.0, 8.0, 15.0, 16.0, 23.0, 42.0 ];
  var main = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Graphics_D3_Selection.rootSelect(".chart"))(Graphics_D3_Selection.selectAll(Graphics_D3_Selection.existingSelection)("div")))(Graphics_D3_Selection.bindData(array)))(Graphics_D3_Selection.enter))(Graphics_D3_Selection.append(Graphics_D3_Selection.appendableEnter)("div")))(Graphics_D3_Selection["style'"](Graphics_D3_Selection.existingSelection)("width")(function (d) {
      return Data_Show.show(Data_Show.showNumber)(d) + "px";
  })))(Graphics_D3_Selection["text'"](Graphics_D3_Selection.existingSelection)(Data_Show.show(Data_Show.showNumber)));
  exports["array"] = array;
  exports["main"] = main;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
